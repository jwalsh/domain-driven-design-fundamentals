* Domain-Driven Design Fundamentals

** Sub-domains
** Bounded Contexts
** Context Maps
** Context Boundaries
** Domain
** Single Responsibilities
** Entity Equality
** Associations
** Value Objects
** Entity Logic
** Aggregates
** Invariants
** Repositories
** Domain Events
** Domain Event Boundaries
** Message Queues, Events, and Services
* Domain-Driven Design: Tackling Complexity in the Heart of Software
** Putting the Domain Model to Work
*** Crunching Knowledge
*** Communication and the Use of Language
*** Binding Model and Implementation
** The Building Blocks of a Model-Driven Design
*** Isolating the Domain
*** A Model Expressed in Software
*** The Life Cycle of a Domain Object
*** Using the Language: An Extended Example
** Refactoring Toward Deeper Insight
*** Breakthrough
*** Making Implicit Concepts Explicit
*** Supple Design
*** Applying Analysis Patterns
*** Relating Design Patterns to the Model
*** Refactoring Toward Deeper Insight
** Strategic Design
*** Maintaining Model Integrity
*** Distillation
*** Large-Scale Structure
*** Bringing the Strategy Together
** Conclusion
*** Appendix. The Use of Patterns in This Book
*** Glossary

* Domain-Driven Design Reference

- https://www.domainlanguage.com/wp-content/uploads/2016/05/DDD_Reference_2015-03.pdf

* Resources

- https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/ddd-oriented-microservice
- https://www.domainlanguage.com/ddd/
